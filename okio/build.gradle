apply plugin: 'java-library'
apply plugin: 'org.jetbrains.kotlin.platform.jvm'
apply plugin: 'ru.vyarus.animalsniffer'
apply plugin: 'me.champeau.gradle.japicmp'
apply plugin: 'me.champeau.gradle.jmh'

apply from: "$rootDir/gradle/gradle-mvn-push.gradle"

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

jar {
  manifest {
    attributes('Automatic-Module-Name': 'okio')
  }
}

animalsniffer {
  sourceSets = [sourceSets.main]
}

configurations {
  baseline
}

jmh {
  duplicateClassesStrategy = 'warn'
}

dependencies {
  signature 'org.codehaus.mojo.signature:java16:1.1@signature'

  implementation project(':platform:jvm')
  implementation deps.kotlin.stdLib.jdk6
  compileOnly deps.animalSniffer.annotations
  compileOnly deps.jsr305
  testImplementation deps.test.junit
  testImplementation deps.test.assertj
  testImplementation deps.kotlin.test.jdk

  baseline('com.squareup.okio:okio:1.14.0') {
    transitive = false
    force = true
  }

  jmh deps.jmh.core
  jmh deps.jmh.generator
}

task japicmp(type: me.champeau.gradle.japicmp.JapicmpTask, dependsOn: 'jar') {
  oldClasspath = configurations.baseline
  newClasspath = files(jar.archivePath)
  onlyBinaryIncompatibleModified = true
  failOnModification = true
  txtOutputFile = file("$buildDir/reports/japi.txt")
  ignoreMissingClasses = true
  includeSynthetic = true
}
check.dependsOn(japicmp)

assemble.dependsOn(tasks['jmhJar'])
